{
	"file_type": "RF_VCB_PROJECT",
	"file_version": 2,
	"title": "",
	"creation_date": 1698367089,
	"last_edit_date": 1744666398,
	"time_worked_on": 4828042,
	"layers": [
		"",
		"KLUv/YBYAAAAAVQAABAAAAEA+/85wAICABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAA1AQAKAD/Zmb/PCDggqFTlo4BVUUPEwjmPwm8vwRUvwazMEDwE3D+cgCE3LeHCQEBHDhY/xzMQfHTwwUN85+G8L8eBjs5+Os4SO3uofbnvx7OCAYBMzBgcAvjfwJqvx4uAQz6YHiwe+H5Cwi5/wbKwgDD+EIQjH8ErITGr4eLABYmAiAoge03Amq/1eF6YQD8F6ZyCGglASMInqWrK2wBAAgADgBxlSCH/B8Ajx4AA70PerhJw/ofGgANtQ96+MkAYAAWzP/hACBAJx9cAQIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAMAEAACAAAAAAgAAAIAAAAACAAAAgAAAAAAAAE=",
		"KLUv/YBYAAAAAVQAABAAAAEA+/85wAICABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAADABAAAgAAAAAIAAACAAAAAAgAAAIAAAAAAAAB"
	],
	"assembly": "bookmark Assembly Definition\nsub_bookmark Instruction Set\n## move instructions\nsymbol iMOV    0x00\nsymbol iMOV16  0x40\n\n## simple instructions\nsymbol NOP     0x80\nsymbol HLT     0x81\nsymbol INT     0x82\nsymbol RST     0x83\nsymbol CIE     0x84\nsymbol SIE     0x85\nsymbol STX     0x86\nsymbol CLX     0x87\n\n## Complex instructions\n# ALU unary\nsymbol iINC    0x90\nsymbol iINC16  0x92\nsymbol iDEC    0x94\nsymbol iNOT    0x96\n\n# ALU binary\nsymbol iADD    0x98\nsymbol iADD16  0x9A\nsymbol iSUB    0x9C\nsymbol iSUB16  0x9E\nsymbol iCMP    0xA0\nsymbol iAND    0xA2\nsymbol iOR     0xA4\nsymbol iXOR    0xA6\nsymbol iSHL    0xA8\nsymbol iSHR    0xAA\nsymbol iRTL    0xAC\nsymbol iRTR    0xAE\n\n# other complex\nsymbol iJMP    0xB0\nsymbol iJSR    0xB2\nsymbol iLDF    0xB4\n\nsymbol iSTI    0xB8\nsymbol iSTI16  0xBA\nsymbol iLDI    0xBC\nsymbol iLDI16  0xBE\n\n## standard instructions\nsymbol PUSH   0xC0\nsymbol PUSH16 0xC8\nsymbol POP    0xD0\nsymbol POP16  0xD8\nsymbol PEEK   0xE0\nsymbol PEEK16 0xE8\nsymbol RIT    0xF0\nsymbol RSR    0xF8\n\nsub_bookmark Operands\n## LOC: 8-bit/16-bit location operands\nsymbol A    0b000\nsymbol AB   0b000\n\nsymbol B    0b001\nsymbol CD   0b001\n\nsymbol C    0b010\nsymbol SP   0b010\n\nsymbol D    0b011\n# invalid for 16-bit\n\nsymbol ABp  0b100 # would've prefered [AB] to represent indirection, oh well.\nsymbol CDp  0b101\nsymbol imm  0b110\nsymbol immp 0b111\n\n## COND: Condition operands\n# would've prefered =X, !X, etc.\nsymbol fX 0b000\nsymbol fC 0b001\nsymbol fZ 0b010\nsymbol fN 0b011\nsymbol fnX 0b100\nsymbol fnC 0b101\nsymbol fnZ 0b110\nsymbol fnN 0b111\n\nsub_bookmark Instruction Macros\n# Woo, only 25 of these to write.\n# I mean, 2, basically, then just copy-paste.\n\n## Move instructions\nmacro MOV   { iMOV | ( a? << 3 ) | b? }\nmacro MOV16 { iMOV16 | ( a? << 3 ) | b? }\n\n\n## Complex instructions\n# ALU unary instructions\nmacro INC   { iINC   | ( a? >> 2);  ((a? << 6) & 0xFF) | b?}\nmacro INC16 { iINC16 | ( a? >> 2);  ((a? << 6) & 0xFF) | b?}\nmacro DEC   { iDEC   | ( a? >> 2);  ((a? << 6) & 0xFF) | b?}\nmacro NOT   { iNOT   | ( a? >> 2);  ((a? << 6) & 0xFF) | b?}\n\n# ALU binary instructions\nmacro ADD   { iADD   | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c? }\nmacro ADD16 { iADD16 | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro SUB   { iSUB   | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro SUB16 { iSUB16 | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\n\nmacro CMP   { iCMP | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) }\nmacro AND   { iAND | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro OR    { iOR  | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro XOR   { iXOR | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\n\nmacro SHL   { iSHL | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro SHR   { iSHR | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro RTL   { iRTL | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\nmacro RTR   { iRTR | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) | c?}\n\n# Other complex instructions\nmacro JMP   { iJMP | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) }\nmacro JSR   { iJSR | ( a? >> 2);  ((a? << 6) & 0xFF) | (b? << 3) }\nmacro LDF   { iLDF | ( a? >> 2);  (a? << 6) & 0xFF }\n\nmacro STI   { iSTI   | ( a? >> 2);  ((a? << 6) | (b? << 3) | c?) & 0xFF}\nmacro STI16 { iSTI16 | ( a? >> 2);  ((a? << 6) | (b? << 3) | c?) & 0xFF}\nmacro LDI   { iLDI   | ( a? >> 2);  ((a? << 6) | (b? << 3) | c?) & 0xFF}\nmacro LDI16 { iLDI16 | ( a? >> 2);  ((a? << 6) | (b? << 3) | c?) & 0xFF}\n\n\nsub_bookmark Misc\n## Memory locations \nsymbol CODE_START   0x0003\nsymbol INT_POINTER  0x0001\nsymbol VMEM_POINTER 0xFFFD\nsymbol INT_REGISTER 0xFFFF\n\nmacro word { ( a? )  >> 8; ( a? ) & 0xFF }\n\n\n\nbookmark Code\n\nsymbol STACK_START 0xFFFC\nsymbol VMEM_1\t0xC000\nsymbol VMEM_2 \t0xC800\nsymbol t_inputBuffer_SIZE 64\n\n# interrupt vector\nword onInterrupt\n\norigin 0x0003 # program code starts at 0x0003.\n\n\n@ start\nJMP fnX imm; word CODE_ENTRY\n\n@ error_fName\nword fstr_unknown\n\n@ error_desc\nword estr_illegal\n\n@ jump_to\nword 0x0000\n\n\nsub_bookmark Error Strings\n### STRING DATA!!!!\n@ fstr_unknown\n21;14;11;14;15;23;14;0\n@ fstr_printChar\n16;18;9;14;20;3;8;1;18;0\n@ fstr_div8\n4;9;22;0x23;0\n@ fstr_fmemCopy\n6;13;5;13;3;15;16;25;0\n@ fstr_onKey\n15;14;11;5;25;0\n@ fstr_strToBytes\n19;20;18;20;15;2;25;20;5;19;0\n\n# errordescs\n@ estr_illegal\n#\"illegal op.\"\n9;12;12;5;7;1;12;0x25;15;16;0x28;0\n@ estr_unhandled\n#\"unhandled int.\"\n21;14;8;1;14;4;12;5;4;0x25;9;14;20;0x28;0\n@ estr_argument\n#\"invalid argument\"\n9;14;22;1;12;9;4;37;1;18;7;21;13;5;14;20;0\n@ estr_div0\n#\"divide by zero\"\n4;9;22;9;4;5;37;2;25;37;26;5;18;15;0\n@ estr_character\n#\"invalid char.\"\n9;14;22;1;12;9;4;37;3;8;1;18;0x28;0\n@ estr_nullPointer\n#\"null pointer\"\n14;21;12;12;37;16;15;9;14;20;5;18;0\n@ estr_break\n#\"pause:break\"\n16;1;21;19;5;0x2C;2;18;5;1;11;0\n\nsub_bookmark Strings\n\n@ str_hello\n#\"hello, world.\\nim pooter 3!\"\n8;5;12;12;15;0x29;0x25;23;15;18;12;4;0x28;0x26\n9;13;0x25;16;15;15;20;5;18;0x25;0x1E;0x2A;0\n\n@ str_fib\n# \"fibonacci Dec\\n\"\n6;9;2;15;14;1;3;3;9;37;4;5;3;0x26;0\n\n@ str_prime\n# \"primes decimal\\n\"\n16;18;9;13;5;19;37;4;5;3;9;13;1;12;38;0\n\n@ str_parrot\n# \"parrot\\n:\"\n16;1;18;18;15;20;38;0x2C;0\n\n@ str_monitor\n# \"pooter monitor\\nh for help\\n:\"\n16;15;15;20;5;18;37;13;15;14;9;20;15;18;38;8;37;6;15;18;37;8;5;12;16;38;0x2c;0\n\n@ str_done\n# \"done!\\n\"\n4;15;14;5;0x2A;38;0\n\n@ numberString\n0x12;0x34;0x56;0x78;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0\n0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0\n0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0\n\nsub_bookmark CODE_ENTRY\n@ CODE_ENTRY\n# INITIAL SETUP!!!!\n\n\n# set default error text\nMOV16 imm immp; word fstr_unknown; word error_fName\nMOV16 imm immp; word estr_illegal; word error_desc\n\n\n# Setup the stack pointer.\nMOV16 imm SP; word STACK_START\n# and the VMEM_POINTER\nMOV16 imm immp; word VMEM_1; word VMEM_POINTER\nMOV16 imm immp; word VMEM_2; word alt_vmem\n\n\n# the cursor\nMOV imm immp; 0; word cursor\n\n# typing\nJSR fnX imm; word f_typing_init\n\n\n# we're now ready for interrupts\nSIE\n\n\n\n\n\n\n\nsub_bookmark f_main\n@ f_main # doesn't return because it's not a function, but oh well.\n\nJSR fnX imm; word prog_decimal\nCIE\nHLT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nbookmark Interrupt Handling\n\nsub_bookmark onInterrupt\n\n@ onInterrupt\nJMP fX imm; word f_onError\n# check for pause/break. This will cause an immediate crash\n# for debugging purposes.\nCMP immp imm; word INT_REGISTER; 127\nJMP fnZ imm; word onInterrupt_notBreak\n\n\n# pause/break\nMOV16 imm immp; word fstr_unknown; word error_fName\nMOV16 imm immp; word estr_break; word error_desc\nSTX\nRIT fX\n\n@ onInterrupt_notBreak\n\n# check for keystroke\nMOV immp A; word INT_REGISTER\nAND A imm A; 0b0100_0000\nJMP fZ imm; word onInterrupt_notKey\n\n# it was, in fact, a keystroke.\nMOV immp A; word INT_REGISTER\nJSR fnX imm; word f_onKey\n\n# clean up and exit by reseting the IntRegister.\nMOV immp A; word INT_REGISTER\nAND A imm immp; 0b1000_0000; word INT_REGISTER\nSIE\nRIT fnX\n\n\n@ onInterrupt_notKey\n\n# Check for timer interrupt\nMOV immp A; word INT_REGISTER\nAND A imm A; 0x80\nJMP fZ imm; word onInterrupt_notTimer\n\n# Yes, it's a timer interrupt\nJSR fnX imm; word f_onTimer\n\n# clean up by reseting the Int Register\nMOV immp A; word INT_REGISTER\nAND A imm immp; 0x7F; word INT_REGISTER\nSIE\nRIT fnX\n\n\n@ onInterrupt_notTimer\n\nMOV16 imm immp; word fstr_unknown; word error_fName\nMOV16 imm immp; word estr_unhandled; word error_desc\nSTX\nRIT fX\n\n\nsub_bookmark f_onError\n@ f_onError\nCLX\n# Save Registers\nPUSH16 CD\nPUSH16 AB\n\nJSR fnX imm; word f_clearScreen\n\n# print error description\nMOV16 immp AB; word error_fName\nMOV imm C; 0\nJSR fnX imm; word f_printStr\n\nMOV16 immp AB; word error_desc\nMOV imm C; 16\nJSR fnX imm; word f_printStr\n\n# print registers\n\n# AB\nMOV16 imm AB; word onError_AB\nMOV imm C; 32\nJSR fnX imm; word f_printStr\n\nPUSH imm; 2\n\nMOV16 SP AB\nADD16 AB imm AB; word 2\nMOV16 imm CD; word onError_valstr\nJSR fnX imm; word f_bytesToHex\n\nMOV16 imm AB; word onError_valstr\nMOV imm C; 35\nJSR fnX imm; word f_printStr\n\nADD16 SP imm SP; word 3\n\n# CD\nMOV16 imm AB; word onError_CD\nMOV imm C; 39\nJSR fnX imm; word f_printStr\n\nPUSH imm; 2\n\nMOV16 SP AB\nADD16 AB imm AB; word 2\nMOV16 imm CD; word onError_valstr\nJSR fnX imm; word f_bytesToHex\n\nMOV16 imm AB; word onError_valstr\nMOV imm C; 43\nJSR fnX imm; word f_printStr\n\nADD16 SP imm SP; word 3\n\n# SP\nMOV16 imm AB; word onError_SP\nMOV imm C; 48\nJSR fnX imm; word f_printStr\n\n# pushing SP doesn't work correctly. Avoid doing it.\nMOV16 SP AB\nPUSH16 AB\n\nPUSH imm; 2\n\nMOV16 SP AB\nADD16 AB imm AB; word 2\nMOV16 imm CD; word onError_valstr\nJSR fnX imm; word f_bytesToHex\n\nMOV16 imm AB; word onError_valstr\nMOV imm C; 51\nJSR fnX imm; word f_printStr\n\nADD16 SP imm SP; word 3\n\n\n## PRINT STACK\nMOV16 imm AB; word onError_Stack\nMOV imm C; 64\nJSR fnX imm; word f_printStr\n\n## Okay, what's the plan.\n# We need to repeatedly call bytes_ToHex and printStr, so\n# effectively our registers are just for that.\n# First: Calculate the number of words we need to\n# print. Max is 21, an minimum is 0, if the stack\n# is empty. if the stack is odd, we need to print a 00 at the start.\n\n# After approximately 3 eons, I now have magic functions that will do\n# whatever I desire. Still need to figure out how many bytes to print out.\n# Max: 42 (7*6) bytes\n\nSUB16 imm SP CD; word STACK_START\nCMP D imm; 0\nJMP fZ imm; word onError_end\nCMP imm D; 42\nJMP fnN imm; word onError_stackprintout\n\nMOV imm D; 42\n\n@ onError_stackprintout\nMOV16 SP AB\nINC16 AB AB\nMOV D C\nMOV imm immp; 80; word cursor\nJSR fnX imm; word f_cursorPrintBytes\n\n@ onError_end\nHLT\n\n@ onError_valstr\n0;0;0;0;0\n\n@ onError_AB\n1;2;0x2C;0\n@ onError_CD\n37;3;4;0x2C;0\n@ onError_SP\n19;16;0x2C;0\n\n@ onError_Stack\n19;20;1;3;11;0x2C;0\n\n@ timer_count\nword 0\n\nsub_bookmark f_onTimer\n@ f_onTimer\n# typing thing\nMOV imm immp; 0; word t_lastChar\nINC16 immp immp; word timer_count; word timer_count\nRSR fnX\n\n# this is sorta\n\n\nbookmark Programs\n\nsub_bookmark prog_monitor\n@ monitor_str_badCommand\n# \"bad command\"\n2;1;4;37;3;15;13;13;1;14;4;0\n\n@ monitor_str_badData\n# \"bad hex data\"\n2;1;4;37;8;5;24;37;4;1;20;1;0\n\n@ monitor_str_badArg\n# \"bad argument\"\n2;1;4;37;1;18;7;21;13;5;14;20;0\n\n@ monitor_str_good\n# \"good\"\n7;15;15;4;0\n\n@ monitor_str_help\n# \"h: help\\n\n#  r a: read at addr\n#  w a d: write data at addr\\n\n#  j a: jump to addr\"\n8;0x2C;8;5;12;16;38;18;37;1;44;18;5;1;4;37;1;20;37;1;4;4;18;\n23;37;1;37;4;44;23;18;9;20;5;37;4;1;20;1;37;1;20;37;1;4;4;18;38;\n10;37;1;44;10;21;13;16;37;20;15;37;1;4;4;18;0\n\n@ prog_monitor\n# The final program!\nCIE\n\n# setup cursor\nMOV imm immp; 0; word cursor\nMOV16 imm immp; word 0; word jump_to\n\n# setup typing\nMOV16 imm immp; word monitor_onInput; word t_onInput\nMOV16 imm immp; word default_onKey; word t_onKey\nMOV imm immp; 1; word t_allowTyping\n\n\n# print welcome message\nJSR fnX imm; word f_clearScreen\nMOV16 imm AB; word str_monitor\nJSR fnX imm; word f_cursorPrintStr\nMOV immp immp; word cursor; word last_cursPos\n\n# blink the cursor, allow for typing.\nSIE\nJMP fnX imm; word default_loop\n\n@ monitor_onInput\n# check for command\n# check that there is a command.\nCMP immp imm; word t_inputBuffer; 0\nJMP fZ imm; word monitor_onInput_done\n\n# the command is the first character.\nMOV immp A; word t_inputBuffer\n\nCMP A imm; 8 # H, help\nJMP fnZ imm; word monitor_onInput_notHelp\nJSR fnX imm; word monitor_help\nJMP fnX imm; word monitor_onInput_done\n@ monitor_onInput_notHelp\n\n##### r, READ COMMAND\nCMP A imm; 18\nJMP fnZ imm; word monitor_onInput_notRead\n\n# start\nJSR fnX imm; word f_monitor_processHex\n# A = 0 if good\n\nCMP A imm; 0\nJMP fnZ imm; word monitor_onInput_badData \n\n# Data is probably good.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strLen\nCMP C imm; 4\nJMP fnZ imm; word monitor_onInput_badArg\n\n# Data is 100% good. Now, to process it.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strToBytes\n\n\n\nMOV16 immp AB; word strToBytes_output \nMOV imm C; 24 # 6*4\nJSR fnX imm; word f_cursorPrintBytes\n\n\nJMP fnX imm; word monitor_onInput_done\n\n@ monitor_onInput_notRead\n\n### JUMP COMMMMANNNNDNDDD!!!!\n# *cough* excuse me. \nCMP A imm; 10\nJMP fnZ imm; word monitor_onInput_notJump\n\n# start\nJSR fnX imm; word f_monitor_processHex\n# A = 0 if good\n\nCMP A imm; 0\nJMP fnZ imm; word monitor_onInput_badData \n\n# Data is probably good.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strLen\nCMP C imm; 4\nJMP fnZ imm; word monitor_onInput_badArg\n\n# Data is 100% good. Now, to process it.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strToBytes\n\nMOV16 immp immp; word strToBytes_output; word jump_to\nMOV16 imm AB; word jump_to\nMOV imm C; 2\nJSR fnX imm; word f_cursorPrintBytes\n\nJMP fnX imm; word monitor_onInput_done\n\n\n\n@ monitor_onInput_notJump\n\n\n### WRITE COMMMMANNNNDNDDD!!!!\n# *cough* excuse me. \nCMP A imm; 23\nJMP fnZ imm; word monitor_onInput_notWrite\n\n# start\nJSR fnX imm; word f_monitor_processHex\n# A = 0 if good\n\nCMP A imm; 0\nJMP fnZ imm; word monitor_onInput_badData \n\n# Data is probably good.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strLen\nCMP C imm; 6\nJMP fN imm; word monitor_onInput_badArg\nAND C imm B; 1\nJMP fnZ imm; word monitor_onInput_badArg\n\n# Data is acceptable.\nMOV16 imm AB; word t_inputBuffer\nJSR fnX imm; word f_strToBytes\n\nPUSH16 immp; word strToBytes_output\nMOV16 imm AB; word strToBytes_output\nADD16 AB imm AB; word 2\nSUB C imm C; 2\n\nMOV C D\nMOV imm C; 0\nPUSH16 CD\nLDI16 SP imm CD; word 3\nJSR fnX imm; word f_memCopy\nADD16 SP imm SP; word 4\n#JMP fnX imm; word f_onError\n\n\nJMP fnX imm; word monitor_onInput_done\n\n@ monitor_onInput_notWrite\n\n# command is unrecognized.\nMOV16 imm AB; word monitor_str_badCommand\nJSR fnX imm; word f_cursorPrintStr\nJMP fnX imm; word monitor_onInput_done\n\n\n@ monitor_onInput_badData\n# hex data is bad\nMOV16 imm AB; word monitor_str_badData\nJSR fnX imm; word f_cursorPrintStr\nJMP fnX imm; word monitor_onInput_done\n\n\n@ monitor_onInput_badArg\n# hex data is bad\nMOV16 imm AB; word monitor_str_badArg\nJSR fnX imm; word f_cursorPrintStr\n\n@ monitor_onInput_done\n\n# print directive\nJSR fnX imm; word f_cursorNewline\nMOV imm C; 0x2C\nJSR fnX imm; word f_cursorPrintChar\n\n# update lastpos\nMOV immp immp; word cursor; word last_cursPos\nRSR fnX\n\n\n@ monitor_help\nMOV16 imm AB; word monitor_str_help\nJSR fnX imm; word f_cursorPrintStr\nRSR fnX\n\n@ processHex_writePointer\nword 0\n@ processHex_readPointer\nword 0\n\nsub_bookmark f_monitor_processHex\n@ f_monitor_processHex\n# process the input buffer into a hex string.\n# A will be nonzero if there were invalid characters\n\nMOV16 imm immp; word 0; word processHex_writePointer\nMOV16 imm immp; word 1; word processHex_readPointer\n\n@ f_monitor_processHex_loop\n\n# Read the current character.\nLDI imm immp C; word t_inputBuffer; word processHex_readPointer\n\n# Zero means the string has ended. Done!\nCMP C imm; 0\nJMP fZ imm; word f_monitor_processHex_good\n\n# space. We should increment the read pointer, but not the write pointer.\nCMP C imm; 37 # space\nJMP fZ imm; word f_monitor_processHex_inc\n\n# next, check whether the character is a valid hex character.\nJSR fnX imm; word f_isHex # D is zero if invalid.\n#MOV imm D; 1\n\n# if the chraracter is invalid, throw an error.\nCMP D imm; 0;\nJMP fZ imm; word f_monitor_processHex_bad\n\n\n# character is valid, write the character.\nSTI imm immp C; word t_inputBuffer; word processHex_writePointer\n\n\n@ f_monitor_processHex_inc\n# check if we've reached limit.\nCMP immp imm; word processHex_readPointer + 1; t_inputBuffer_SIZE - 1;\nJMP fZ imm; word f_monitor_processHex_good\n\n# increment the read pointer\nINC16 immp immp; word processHex_readPointer; word processHex_readPointer ;\nCMP C imm; 37\nJMP fZ imm; word f_monitor_processHex_loop\n\n# increment the write pointer.\nINC16 immp immp; word processHex_writePointer ; word processHex_writePointer;\nJMP fnX imm; word f_monitor_processHex_loop\n\n\n@ f_monitor_processHex_good\nMOV imm A; 0\nSTI imm immp imm; word t_inputBuffer; word processHex_writePointer;0\n\nRSR fnX\n\n@ f_monitor_processHex_bad\n\nMOV imm A; 1\nSTI imm immp imm; word t_inputBuffer; word processHex_writePointer;0\nRSR fnX\n\n\nsub_bookmark prog_parrot\n\n@ prog_parrot\nCIE\nJSR fnX imm; word f_clearScreen\nMOV16 imm immp; word 0; word jump_to\nMOV imm immp; 0; word cursor\n\n# setup typing\nMOV16 imm immp; word parrot_onInput; word t_onInput\nMOV16 imm immp; word default_onKey; word t_onKey\nMOV imm immp; 1; word t_allowTyping\nMOV immp immp; word cursor; word last_cursPos\n\n# print welcome message\nMOV16 imm AB; word str_parrot\nJSR fnX imm; word f_cursorPrintStr\n\n# loop with cursor\nSIE\nJMP fnX imm; word default_loop\n\n\n\n@ parrot_onInput\n\n\n# print\nMOV16 imm AB; word t_inputBuffer\nMOV imm C; 6\nJSR fnX imm; word f_cursorPrintStr\nJSR fnX imm; word f_cursorNewline\nMOV imm C; 0x2C\nJSR fnX imm; word f_cursorPrintChar\nMOV immp immp; word cursor; word last_cursPos\nRSR fnX\n\n\n\n\nsub_bookmark prog_primes\n\n@ prog_primes\n# setup cursor\nMOV imm immp; 0; word cursor\n\nJSR fnX imm; word f_clearScreen\n\n# Hello, world!\nMOV16 imm AB; word str_prime\nJSR fnX imm; word f_cursorPrintStr\n\nMOV imm A; 0x2\nPUSH A\nJSR fnX imm; word f_cursorPrintDec\nJSR fnX imm; word f_cursorNewline\n\n\n\n@ Primes_loop\n\nPOP A\nINC A A\nJMP fC imm; word Primes_end\nPUSH A\nJSR fnX imm; word f_isPrime\nJMP fZ imm; word Primes_loop\n\n# it's prime!\nPEEK A\nJSR fnX imm; word f_cursorPrintDec\nJSR fnX imm; word f_cursorNewline\nJMP fnX imm; word Primes_loop\n\n@ Primes_end\n#MOV16 imm immp; word 0x0001; word VMEM_POINTER\nMOV16 imm AB; word str_done\nJSR fnX imm; word f_cursorPrintStr\nRSR fnX\n\n\n@ f_isPrime\n# sets fZ if A is not prime\n\nPUSH A\nPUSH imm; 2\n\n@ isPrime_loop\nPOP B\nPEEK A\nPUSH B\nJSR fnX imm; word f_div8\nCMP C imm; 0\nJMP fZ imm; word isPrime_end_early\n\n# Check whether to return\nPOP B\nPEEK A\nSHR A imm A; 1\nCMP A B\nJMP fN imm; word isPrime_end\nINC B B\nPUSH B\n\n\nJMP fnX imm; word isPrime_loop\n\n@ isPrime_end_early\nPOP A\n@ isPrime_end\nPOP A\nRSR fnX\n\n\n\nsub_bookmark prog_fibonacci\n@ prog_fibonacci\n# setup cursor\nMOV imm immp; 0; word cursor\n\nJSR fnX imm; word f_clearScreen\n\n# Hello, world!\nMOV16 imm AB; word str_fib\nJSR fnX imm; word f_cursorPrintStr\n\nMOV imm A; 0x1\nPUSH A\nJSR fnX imm; word f_cursorPrintDec\nJSR fnX imm; word f_cursorNewline\n\nMOV imm A; 0x1\nPUSH A\nJSR fnX imm; word f_cursorPrintDec\nJSR fnX imm; word f_cursorNewline\n\n@ fibonacci_loop\nPOP A\nPOP B\nADD A B B\nJMP fC imm; word fibonacci_end\nPUSH A\nPUSH B\n\nMOV B A\nJSR fnX imm; word f_cursorPrintDec\nJSR fnX imm; word f_cursorNewline\nJMP fnX imm; word fibonacci_loop\n\n\n@ fibonacci_end\nMOV16 imm AB; word str_done\nJSR fnX imm; word f_cursorPrintStr\n\n\nMOV16 imm AB; word 0\n@ fibonacci_endLoop\nINC16 AB AB\nCMP A imm; 0x10\nJMP fnZ imm; word fibonacci_endLoop\n\nRSR fnX\n\n\n\n\n\nsub_bookmark prog_decimal \n@ str_decimal\n#\"Decimal Test\\n\"\n4;5;3;9;13;1;12;0x25;20;5;19;20;0x26;0\n\n@ prog_decimal\n# setup cursor\nMOV imm immp; 0; word cursor\nJSR fnX imm; word f_clearScreen\n\n# print welcome message\nMOV16 imm AB; word str_decimal\nJSR fnX imm; word f_cursorPrintStr\n\n\n\nMOV imm A; 0x0\nPUSH A\n\n@ decimal_mul_loop\n\nMOV imm B; 1\nJSR fnX imm; word f_mul8\nPUSH16 CD\nMOV16 SP AB\nINC16 AB AB\nMOV imm C; 2\nJSR fnX imm; word f_cursorPrintBytes\nJSR fnX imm; word f_cursorNewline\nPOP16 CD\nPOP A\nINC A A\nCMP imm A; 8\nJMP fN imm; word decimal_loop\nPUSH A\nJMP fnX imm; word decimal_mul_loop\n\n\n\n# sit there doing nothing\n@ decimal_loop\nJMP fnX imm; word decimal_loop\n\nRSR fnX\n\nsub_bookmark program pieces\n\n@ last_cursPos\n0\n\n@ default_loop\n# blinks cursor.\nMOV16 immp AB; word jump_to\nOR A B A; \nCMP A imm; 0\nJMP fZ imm; word default_loop_2\nCIE\nMOV imm immp; 0; word t_allowTyping\nJSR fnX immp; word jump_to\nRST\n\n@ default_loop_2\n\nMOV16 immp AB; word timer_count \nMOV B A\nAND A imm A; 1\nCMP A imm; 0\nJMP fnZ imm; word default_notFilled\n# fill\nCIE\nMOV imm C; 0x30\nJSR fnX imm; word f_cursorPrintChar\nDEC immp immp; word cursor; word cursor\nSIE\n\nJMP fnX imm; word default_loop\n\n@ default_notFilled\nCMP A imm; 1\nJMP fnZ imm; word default_loop\nCIE\nMOV imm C; 0x25\nJSR fnX imm; word f_cursorPrintChar\nDEC immp immp; word cursor; word cursor\nSIE\n\nJMP fnX imm; word default_loop\n\n\n\n@ default_onKey\n# A is key pressed.\nMOV A C\nCMP C imm; 0x27\nJMP fZ imm; word default_onKey_backspace\nCMP C imm; 0x26\nJMP fnZ imm; word default_onKey_normal\n# enter, extra space.\nPUSH C\nMOV imm C; 0x25\nJSR fnX imm; word f_cursorPrintChar\nDEC immp immp; word cursor; word cursor\nPOP C\n@ default_onKey_normal\nJSR fnX imm; word f_cursorPrintChar\nRSR fnX\n\n@ default_onKey_backspace\nCMP immp immp; word cursor; word last_cursPos\nRSR fZ\nMOV imm C; 0x25\nJSR fnX imm; word f_cursorPrintChar\nSUB immp imm immp; word cursor; 2; word cursor\nMOV imm C; 0x25\nJSR fnX imm; word f_cursorPrintChar\nDEC immp immp; word cursor; word cursor\nRSR fnX\n\n\n\nbookmark Typing\n\n@ t_allowTyping\n0\n\n# pointer to subroutine when enter is pressed\n@ t_onInput\nword 0\n\n# pointer to subroutine when key is pressed\n@ t_onKey\nword 0\n\n@ t_inputBuffer\n\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n0;0;0;0; 0;0;0;0\n\n\n# relative to inputBuffer\n@ t_inputPointer\nword 0\n\n# last character typed. Reset by timer interrupt\n@ t_lastChar\nword 0\n\n\nsub_bookmark f_typing_init\n@ f_typing_init\n# Initiallizes typing 'module'\n# The initialized state is one in which typing is disabled.\n# setup must be completed after this call to enable typing.\n# set t_allowTyping to a non-zero value, and set t_onInput to \n# a custom input handling function.\n# Optionally, programs may make use of the t_processed pointer to keep track\n# of input used.\nMOV imm immp; 0; word t_allowTyping\n\n# this should be changed if typing is enabled.\n# if it is left at zero, a crash will occur.\nMOV16 imm immp; word 0; word t_onInput\n\n# this should be changed if typing is enabled.\n# if it is left at zero, a crash will occur\n\n\n\n\n# clear the inputBuffer.\nMOV16 imm AB; word t_inputBuffer;\nMOV16 imm CD; word t_inputBuffer_SIZE\nJSR fnX imm; word f_memClear\n\nMOV16 imm immp; word 0; word t_inputPointer\nMOV16 imm immp; word 0; word t_lastChar\n\nRSR fnX\n\n\nsub_bookmark f_onKey\n@ f_onKey\n# A - contents of the Keyboard register\nAND A imm A; 0x3F\n\n# First, check if typing is enabled. return if not.\nCMP immp imm; word t_allowTyping; 0\nRSR fZ\n\n\n# check if this is a new key press.\nMOV immp B; word t_lastChar\nCMP A B\nRSR fZ # it is not, ignore it\n\n# it is, save last char\nMOV A immp; word t_lastChar\nPUSH A\n\n# Call user onkey\nMOV16 immp AB; word t_onKey\nADD A B C;\nJMP fZ imm; word onKey_nullPointer\n\n# We can call it.\nPEEK A\nJSR fnX immp; word t_onKey\nPOP A\t\n\n\n\n# check if this is the end of the input\nCMP A imm; 0x26\nJMP fnZ imm; word onKey_notEnter\n\n# it is! Try to call onInput, so the client can respond.\nMOV16 immp AB; word t_onInput\nADD A B C;\nJMP fnZ imm; word onKey_onInput\n\n@ onKey_nullPointer\n# onInput was not properly set.\nMOV16 imm immp; word fstr_onKey; word error_fName\nMOV16 imm immp; word estr_nullPointer; word error_desc\nJMP fnX imm; word f_onError\n\n@ onKey_onInput\n# call the user's code.\nJSR fnX immp; word t_onInput\n# now, clean up.\n\n# clear the inputBuffer.\nMOV16 imm AB; word t_inputBuffer;\nMOV16 imm CD; word t_inputBuffer_SIZE\nJSR fnX imm; word f_memClear\n# clear pointers\nMOV16 imm immp; word 0; word t_inputPointer\nMOV16 imm immp; word 0; word t_lastChar\n\nRSR fnX\n\n# The key pressed was NOT enter.\n@ onKey_notEnter\n# Check if the input buffer is full.\nSUB16 immp imm CD; word t_inputPointer; word t_inputBuffer_SIZE\nJMP fN imm; word onKey_notFull\n# basically nop. We won't save the input.\nRSR fnX\n\n\n@ onKey_notFull\n# This is a valid keystroke (unless it's null, let's check)\nCMP A imm; 0\nJMP fnZ imm; word onKey_notNull\nMOV16 imm immp; word fstr_onKey; word error_fName\nMOV16 imm immp; word estr_argument; word error_desc\nJMP fnX imm; word f_onError\n\n@ onKey_notNull\n# This is 100% a valid keystroke. is it a backspace?\nCMP A imm; 0x27\nJMP fnZ imm; word onKey_notBackspace\n\n# it is backspace\n# check that something can be backspaced\nMOV16 immp AB; word t_inputPointer\nADD A B C\nRSR fZ\n\nSUB16 immp imm immp; word t_inputPointer; word 1; word t_inputPointer\nSTI imm immp imm; word t_inputBuffer; word t_inputPointer; 0\nRSR fnX\n\n\n@ onKey_notBackspace\n\nSTI imm immp A; word t_inputBuffer; word t_inputPointer\nINC16 immp immp; word t_inputPointer; word t_inputPointer\nRSR fnX\n\n\n\nbookmark Scrolling\n\n@ cursor\n0\n@ alt_vmem\nword VMEM_2\n\nsub_bookmark f_scrollUp\n@ f_scrollUp\n# Scrolls the contents of the screen up by A\n# A - the number of lines to scroll. 1-16 range\n\nMOV imm B; 160 # 10 lines/char * 16 bytes/line\nJSR fnX imm; word f_fmul8\nPUSH16 CD\n# cd Contains the number of addresses to not copy.\n\n# bytes to copy over\nMOV16 imm AB; word 0x800\nSUB16 AB CD AB\nPUSH16 AB\n\n# starting position\nMOV16 immp AB; word VMEM_POINTER\nADD16 AB CD AB\n\n# destination\nMOV16 immp CD; word alt_vmem\n\n\n# copy the old portion of the screen\nJSR fnX imm; word f_fmemCopy\n#ADD16 SP imm SP; word 2\n\n# we need to now blank out the un copied portion\n# of the new screen\nMOV16 immp AB; word alt_vmem\nADD16 AB imm AB; word 0x800\nPOP16 CD\nSUB16 AB CD AB\n\n@ scrollUp_loop\n# AB contains the starting position\n# CD contains the number of entries\nMOV16 imm ABp; word 0\nADD16 AB imm AB; word 2\nSUB16 CD imm CD; word 2\nJMP fnZ imm; word scrollUp_loop\n\n# Okay, now we just swap vmem pointers and all's well.\nMOV16 immp AB; word VMEM_POINTER\nMOV16 immp immp; word alt_vmem; word VMEM_POINTER\nMOV16 AB immp; word alt_vmem\nRSR fnX\n\n\nsub_bookmark f_cursorAdvance\n@ f_cursorAdvance\n# no arguments.\n# advances the cursor by one, scrolling\n# if needbe.\n# note: cursor points to where the next\n# character will be printed.\n# destroys all\n\nINC immp A; word cursor\nMOV A immp; word cursor\nCMP imm A; 191\nRSR fnN \n\n# scrolling is required.\nPUSH A\nMOV imm A; 7\nJSR fnX imm; word f_scrollUp\nPOP A\nSUB A imm immp; 7 * 16; word cursor\nRSR fnX\n\nsub_bookmark f_cursorNewline\n@ f_cursorNewline\n# no args, destroys all.\n# advances the cursor as if there's a newline.\nMOV immp A; word cursor\nAND A imm A; 0xF0\nADD A imm A; 0x10\nDEC A immp; word cursor\n\nJSR fnX imm; word f_cursorAdvance\nRSR fnX\n\nsub_bookmark f_cursorPrintChar\n@ f_cursorPrintChar\n# prints a character and advances the cursor accordingly.\n# C - character to print 0-63\n# destroys all.\nCMP C imm; 0x26\nJMP fnZ imm; word cursorPrintChar_notNewline\nJSR fnX imm; word f_cursorNewline\nRSR fnX\n\n@ cursorPrintChar_notNewline\nMOV immp A; word cursor\nJSR fnX imm; word f_printChar\nJSR fnX imm; word f_cursorAdvance\nRSR fnX\n\n\n\nsub_bookmark f_cursorPrintStr\n@ f_cursorPrintStr\n# prints a null terminated string at the cursor position.\n# AB - pointer to start of string\n# destroys all.\n\nCMP ABp imm; 0\nRSR fZ\nPUSH16 AB\nMOV ABp C\nJSR fnX imm; word f_cursorPrintChar\nPOP16 AB\nINC16 AB AB\nJMP fnX imm; word f_cursorPrintStr\n\n\n\nsub_bookmark f_cursorPrintBytes\n@ f_cursorPrintBytes\n# prints human readable hex bytes from the cursor position\n# AB - data pointer\n# C - number of bytes to write\n\n# SP+1 bytesRemaining\n# SP+2 data*\nCMP C imm; 0\nRSR fZ\n\n\nPUSH16 AB\nPUSH C\n\n@ cursorPrintBytes_loop\nPEEK C\nCMP C imm; 1\nJMP fZ imm; word cursorPrintBytes_lastByte\n\n\n\n# determine if there is enough space left\nMOV immp A; word cursor\nAND A imm A; 0xF\nSUB imm A A; 0xF\nINC A A\nCMP A imm; 4\nJMP fnN imm; word cursorPrintBytes_NoNewline\nJSR fnX imm; word f_cursorNewline\n@  cursorPrintBytes_NoNewline\n\n# process bytes\nLDI16 SP imm AB; word 2\nMOV16 imm CD; word cursorPrintBytes_string\nPUSH imm; 2\nJSR fnX imm; word f_bytesToHex\nINC16 SP SP; \n\n# print them\nMOV16 imm AB; word cursorPrintBytes_string\nJSR fnX imm; word f_cursorPrintStr\n\n# determine whether to return\nLDI16 SP imm AB; word 2\nADD16 AB imm AB; word 2\nSTI16 SP imm AB; word 2\n\nPOP C\nSUB C imm C; 2\nPUSH C\nJMP fZ imm; word cursorPrintBytes_return # bye!\n\n\n# determine whether to print a space\nMOV immp A; word cursor\nAND A imm A; 0xF\nCMP A imm; 0\nJMP fZ imm; word cursorPrintBytes_loop\n\n# yes, print a space\nMOV imm C; 0x25\nJSR fnX imm; word f_cursorPrintChar\nJMP fnX imm; word cursorPrintBytes_loop\n\n\n@ cursorPrintBytes_lastByte\n# determine if there is enough space left\nMOV immp A; word cursor\nAND A imm A; 0xF\nSUB imm A A; 0xF\nINC A A\nCMP A imm; 2\nJMP fnN imm; word cursorPrintBytes_lastNoNewline\nJSR fnX imm; word f_cursorNewline\n@  cursorPrintBytes_lastNoNewline\n\nLDI16 SP imm AB; word 2\nMOV16 imm CD; word cursorPrintBytes_string\nPUSH imm; 1\nJSR fnX imm; word f_bytesToHex\nINC16 SP SP; \n\nMOV16 imm AB; word cursorPrintBytes_string\nJSR fnX imm; word f_cursorPrintStr\n\n\n@ cursorPrintBytes_return\nADD16 SP imm SP; word 3\nRSR fnX\n\n@ cursorPrintBytes_string\nword 0\nword 0\nword 0\n\n\nsub_bookmark f_cursorPrintDec\n@ f_cursorPrintDec\n# prints a byte in decimal at the position of the cursor\n# A - the byte to print\n\nMOV16 imm CD; word cursorPrintDec_buffer\nJSR fnX imm; word f_byteToDec\n\nMOV16 imm AB; word cursorPrintDec_buffer\nJSR fnX imm; word f_cursorPrintStr\n\n\nRSR fnX\n\n\n@ cursorPrintDec_buffer\n0;0;0;0\n\nbookmark String Manipulation\n\n\nsub_bookmark f_byteToDec\n@ f_byteToDec\n# A - byte to convert\n# CD - pointer to string buffer. Should be at most 4 bytes.\n# destroys everything\n\nPUSH16 CD\nMOV imm B; 100\nJSR fnX imm; word f_div8\nPUSH C\nMOV D immp; word byteToDec_testHundreds\nCMP D imm; 0\nJMP fZ imm; word byteToDec_tens\n# 'print' char\nADD D imm D; 0x1B\nLDI16 SP imm AB; word 2\nMOV D ABp\nINC16 AB AB\nSTI16 SP imm AB; word 2\n\n\n\n@ byteToDec_tens\nPOP A\nMOV imm B; 10\nJSR fnX imm; word f_div8\nPUSH C\n\nCMP D imm; 0\nJMP fnZ imm; word byteToDec_printTens\nMOV immp C; word byteToDec_testHundreds\nCMP C imm; 0\nJMP fZ imm; word byteToDec_ones\n\n@ byteToDec_printTens\n# 'print' char\nADD D imm D; 0x1B\nLDI16 SP imm AB; word 2\nMOV D ABp\nINC16 AB AB\nSTI16 SP imm AB; word 2\n\n@ byteToDec_ones\nPOP D\n\n# 'print' char\nADD D imm D; 0x1B\nLDI16 SP imm AB; word 1\nMOV D ABp\nINC16 AB AB\nSTI16 SP imm AB; word 1\n\n@ byteToDec_end\nPOP16 AB\nMOV imm ABp; 0\nRSR fnX\n\n@ byteToDec_testHundreds\n0\n\nsub_bookmark f_bytesToHex\n@ f_bytesToHex\n# AB - pointer to data\n# CD - pointer to string\n# Stack - 1 byte length\n# creates a null terminating string at CD with the \n# hexidecimal representation of 'length' bytes starting at AB\n# the length of the string is 2*length + 1.\n# the caller should pop the length off of the stack.\n# Preserves stack length, trashes AB, CD is the pointer\n# to the null character of the string.\nMOV16 AB immp; word spare_r1\nLDI SP imm A; word 3\n@ bytesToHex_loop\nPUSH A\nLDI immp imm A; word spare_r1; word 0\nINC16 immp immp; word spare_r1; word spare_r1\nJSR fnX imm; word f_byteToHex\nADD16 CD imm CD; word 2\nPOP A\nDEC A A;\nJMP fnZ imm; word bytesToHex_loop\nMOV imm CDp; 0\nRSR fnX\n\n\n\n\n\n@ f_byteToHex\n# A - a byte\n# CD - a pointer where the two byte char string will be \n# put.\n# trashes A and B\nAND A imm B; 0x0F\nAND A imm A; 0xF0\nSHR A imm A; 4\nJSR fnX imm; word f_nybbleToChar\nMOV A CDp;\nMOV B A;\nJSR fnX imm; word f_nybbleToChar\nSTI CD imm A; word 1\nRSR fnX\n\n\n@ f_nybbleToChar\n# takes a nybble and returns a hex digit \n# A - input between 0-15 inclusive\n# A - character that reprsents the Hex value of the character\nCMP A imm; 10\nJMP fnN imm; word nybbleToChar_letter\nADD imm A A; 0x1B\nRSR fnX\n@ nybbleToChar_letter\nSUB A imm A; 9\nRSR fnX\n\n\n\n\nsub_bookmark f_isHex\n@ f_isHex\n# returns whether C is a valid hex character.\n# D will be zero if not.\n# destroys D.\n\nMOV imm D; 0\nCMP C imm; 0\nRSR fZ\n\nCMP C imm; 0x25 # if C is 25 or greater, it cannot be valid. (symbol)\nRSR fnN\n\n# if C is 1B or greater, it is valid. (number)\nMOV imm D; 1\nCMP C imm; 0x1B\nRSR fnN\n\n# if C is 7 or greater, it cannot be valid. (letter)\nMOV imm D; 0\nCMP C imm; 0x07\nRSR fnN\n\n# C is valid. (letter)\nMOV imm D; 1\nRSR fnX\n\n\n\nsub_bookmark f_strLen\n@ f_strLen\n# AB - pointer to string\n# C - return value, length of string in bytes, minus null terminator\n# Destroys AB, C\nMOV imm C; 0\n\n@ strLen_loop\nCMP ABp imm; 0\nRSR fZ\nINC16 AB AB\nINC C C\nJMP fnX imm; word strLen_loop\n\n\n\nsub_bookmark f_strToBytes\n@ strToBytes_output\n# 32 bytes\n0;0;0;0; 0;0;0;0;\n0;0;0;0; 0;0;0;0;\n0;0;0;0; 0;0;0;0;\n0;0;0;0; 0;0;0;0;\n\n@ strToBytes_counter\nword 0\n\n@ f_strToBytes\n# converts a hexidecimal string into a number of bytes.\n# AB - pointer to null-terminated string consisting only of characters\n# A-F and 0-9. The string's length should be even and no greater than 64.\n# Output saved in strToBytes_output. clobbers everything.\n# C - output: number of bytes of output.\nPUSH16 AB\n# confirm that the string is a valid length.\nJSR fnX imm; word f_strLen\nAND C imm A; 0x01\nCMP A imm; 0\nJMP fnZ imm; word strToBytes_arg\nCMP imm C; 64\nJMP fN imm; word strToBytes_arg\n\n\nPUSH C\nMOV16 imm immp; word 0; word strToBytes_counter\n\n@ strToBytes_loop\n# Compare string to check for null.\nLDI16 SP imm AB; word 2\nADD16 AB immp AB; word strToBytes_counter\nADD16 AB immp AB; word strToBytes_counter\nCMP ABp imm; 0\nJMP fZ imm; word strToBytes_end\n\n# loop time!\nLDI16 SP imm AB; word 2\nADD16 AB immp AB; word strToBytes_counter\nADD16 AB immp AB; word strToBytes_counter\nMOV16 ABp AB\nMOV B C;\nJSR fnX imm; word f_charToNybble\nMOV A B\nMOV C A\nMOV B C\nJSR fnX imm; word f_charToNybble\nSHL C imm C; 4\nOR A C A\nSTI imm immp A; word strToBytes_output; word strToBytes_counter\nINC16 immp immp; word strToBytes_counter; word strToBytes_counter\nJMP fnX imm; word strToBytes_loop\n\n\n\n@ strToBytes_end\nPOP C\nPOP16 AB\nSHR C imm C; 1\nRSR fnX\n\n\n@ strToBytes_arg\nMOV16 imm immp; word fstr_strToBytes; word error_fName\nMOV16 imm immp; word estr_argument; word error_desc\nSTX\nJMP fnX imm; word f_onError # for interrupts\n\n\n\n\n\n@ f_charToNybble\n# C - character\n# C - value\n# destroys D.\nJSR fnX imm; word f_isHex\nCMP D imm; 0\nJMP fZ imm; word charToNybble_err\n\nCMP C imm; 0x10\nJMP fN imm; word charToNybble_letter\n\n# is number\nSUB C imm C; 0x1B\nRSR fnX\n\n@ charToNybble_letter\nADD C imm C; 0x09\nRSR fnX\n\n\n\n\n@ charToNybble_err\n# yes, strToBytes. This function won't be used by itself.\nMOV16 imm immp; word fstr_strToBytes; word error_fName\nMOV16 imm immp; word estr_character; word error_desc\nSTX\nJMP fnX imm; word f_onError # for interrupts\n\n\n\n\n\nbookmark Printing\n\n# for use as extra 'registers'\n@ spare_r1\nword 0\n@ spare_r2\nword 0\n@ spare_r3\nword 0\n\n\n\nsub_bookmark f_printStr\n@ f_printStr\n# prints a null terminated string\n# AB - pointer to start of string\n# C - inital character position\n# trashes everything\nMOV ABp D\nINC16 AB AB\nPUSH16 AB\nMOV C A\nMOV D C\n# Now Check for special cases\nCMP C imm; 0 # end of string\nJMP fnZ imm; word printStr_notEnd\nPOP16 AB\nRSR fnX\n@ printStr_notEnd\nCMP C imm; 0x26 # newline\nJMP fnZ imm; word printStr_notNewline\n# advance A, do not print the character.\nAND A imm A; 0xF0\nADD A imm A; 0x10\n# restore so looping can happen\nMOV A C\nPOP16 AB\nJMP fnX imm; word f_printStr\n@ printStr_notNewline\n# prepare for normalcy\nPUSH A\nJSR fnX imm; word f_printChar\nPOP C\nINC C C\nPOP16 AB\nJMP fnX imm; word f_printStr\n\n\n\nsub_bookmark f_printChar\n@ f_printChar\n# prints a character at the specified location on the screen\n# A - index 0-192 (0xC0), errors on invalid\n# C - character 0-63, errors on invalid\n# trashes everything.\nCMP A imm; 192\nJMP fN imm; word printChar_okay\nMOV16 imm immp; word fstr_printChar; word error_fName\nMOV16 imm immp; word estr_argument; word error_desc\nSTX\nJMP fX imm; word f_onError # for interrupt\n\n@ printChar_okay\nPUSH C\n\nAND A imm B; 0x0F\n#SHR B imm B; 1\nPUSH B\nAND A imm B; 0xF0\n#SHL B imm B; 2\n\n# C contains the a number to add for the row\n# A * 5 is the number to add for the column\nMOV imm A; 10\nJSR fnX imm; word f_fmul8\n\nMOV imm A; 0\nPOP B\nADD16 AB CD CD\n# now we have the number to add to the vmem pointer\n# if I made a mistake in any of this I'll never figure it out\nMOV16 immp AB; word VMEM_POINTER\nADD16 AB CD AB\nPOP C\nJSR fnX imm; word f_printChar_offGrid\nRSR fnX\n\n\n\n@ f_printChar_offGrid\n# prints a character to the display at the\n# specified memory address\n# AB - address\n# C - character to print\n# errors out on invalid character.\n# trashes everything\n\nPUSH16 AB\n# check that character is valid.\nCMP C imm; 64\nJMP fN imm; word printChar_offGrid_okay\nMOV16 imm immp; word fstr_printChar; word error_fName\nMOV16 imm immp; word estr_character; word error_desc\nSTX\nJMP fX imm; word f_onError # for interrupt\n\n@ printChar_offGrid_okay\n\nMOV C A\n# size of character data\nMOV imm B; 9\nJSR fnX imm; word f_fmul8\n\nADD16 CD imm CD; word data_characters\nPOP16 AB\nMOV imm immp; 0; word spare_r1\n\n# AB is location\n# CD is data\n# r1 is counter - we're writing 18 bytes.\n@ printChar_loop\nMOV CDp ABp\nINC immp immp; word spare_r1; word spare_r1\nINC16 CD CD;\nADD16 AB imm AB; word 0x10\nCMP immp imm; word spare_r1; 9\nJMP fnZ imm; word printChar_loop\n\n# print one last line.\nMOV16 imm ABp; word 0\nRSR fnX\n\n\nsub_bookmark f_clearScreen\n@ f_clearScreen\n# clears the screen.\n# trashes everything.\n\nMOV16 immp AB; word VMEM_POINTER\nMOV16 imm CD; word 0x0800\n\n@ clearScreen_loop\nMOV16 imm ABp; word 0\nADD16 AB imm AB; word 2\nSUB16 CD imm CD; word 2\nJMP fnZ imm; word clearScreen_loop\nRSR fnX\n\nbookmark Decimal\n\n\n\nbookmark Math/Misc\n\nsub_bookmark f_mul8\n@ mul8_temp\n0\n@ f_mul8\n# Actually fast O(1) 8 bit multiply\n# A, B - input\n# CD - output\n\n# CD is result\nMOV16 imm CD; word 0\n\nMOV imm immp; 0; word mul8_temp\n\n@ mul8_loop\n\nPUSH B\nSHL imm immp B; 1; word mul8_temp\nAND A B B\nPOP B\nJMP fZ imm; word mul8_loop_end\n\n# We will add to our result\nPUSH A\n# bitshift our value for multiplication\nSUB imm immp A; 8; word mul8_temp\nSHR B A A\nSHL B immp B ; word mul8_temp\nADD16 AB CD CD\nPOP A\n\n@ mul8_loop_end\nCMP immp imm; word mul8_temp; 8\nRSR fZ\nINC immp immp; word mul8_temp; word mul8_temp\nJMP fnX imm; word mul8_loop\n\n\n\nsub_bookmark f_fmul8\n@ f_fmul8\n#JMP fnX f_mul8\n# Fast 8 bit multiply\n# A, B - input\n# CD output\n# trashes everything\n\n# A should be smaller\nCMP A B\nJMP fN imm; word fmul8_start\n\n# swap A and B\nMOV A C\nMOV B A\nMOV C B\n\n@ fmul8_start\nMOV16 imm CD; word 0\n\n# stop early if multiplying by 0.\nCMP A imm; 0\nRSR fZ\n\n@ fmul8_loop\nADD B D D\nJMP fnC imm; word fmul8_postcarry\nINC C C\n@ fmul8_postcarry\nDEC A A\nRSR fZ\nJMP fnX imm; word fmul8_loop\n\n\nsub_bookmark f_div8\n@ f_div8\n# divides two 8 bit numbers, as well as finding the remainder.\n# A / B -> CD\n# C is the remainder, D is the quotient, rounded down.\n# preserves A and B\n\nCMP B imm; 0\nJMP fnZ imm; word div8_okay\n\n# divide by 0.\nMOV16 imm immp; word fstr_div8; word error_fName\nMOV16 imm immp; word estr_div0; word error_desc\nSTX\nJMP fnX imm; word f_onError # for interrupts\n\n@ div8_okay\n\nMOV A C\nMOV imm D; 0\n\n@ div8_loop\n# if C is less than B, we are done.\nCMP C B\nRSR fN\nSUB C B C\nINC D D\nJMP fnX imm; word div8_loop\n\n\nsub_bookmark f_memCopy\n@ f_memCopy\n# Copies memory (go figure)\n# AB - source\n# CD - dest\n# stack (2 bytes) - length to copy\n# destroys all inputs\nSUB16 SP imm SP; word 2\n\n@ memCopy_loop\nMOV ABp CDp\nINC16 AB AB\nINC16 CD CD\nSTI16 SP imm CD; word 1\nLDI16 SP imm CD; word 5\nSUB16 CD imm CD; word 1\n\nSTI16 SP imm CD; word 5\nLDI16 SP imm CD; word 1\nJMP fnZ imm; word memCopy_loop\nADD16 SP imm SP; word 2\nRSR fnX\n\nsub_bookmark f_fmemCopy\n@ f_fmemCopy\n# Copies memory, so long as the amount to copy is even.\n# AB - source\n# CD - dest\n# stack (2 bytes) - len - consumed\n\n# sort out the stack\nLDI16 SP imm immp; word 3; word fmemCopy_spare\nPOP16 immp; word fmemCopy_spare2\nADD16 SP imm SP; word 2\nPUSH16 immp; word fmemCopy_spare2\n\n# check for evenness\nAND immp 1 immp; word fmemCopy_spare; word fmemCopy_spare2;\nJMP fZ imm; word fmemCopy_loop\n\n# error out\nMOV16 imm immp; word fstr_fmemCopy; word error_fName\nMOV16 imm immp; word estr_argument; word error_desc\nSTX\n\n# this part needs to be fast\n@ fmemCopy_loop\nMOV16 ABp CDp\nADD16 AB imm AB; word 2\nADD16 CD imm CD; word 2\nSUB16 immp imm immp; word fmemCopy_spare; word 2; word fmemCopy_spare\nJMP fnZ imm; word fmemCopy_loop\n\nRSR fnX\n\n\n\n@ fmemCopy_spare\nword 0\n@ fmemCopy_spare2\nword 0\n\n \nsub_bookmark f_memClear\n@ f_memClear\n# AB - starting memory address\n# CD - Length\n# destroys all.\nCMP CD imm; 1\nJMP fZ imm; word memClear_clearLast\n\nMOV16 imm ABp;  word 0\nADD16 AB imm AB; word 2\nSUB16 CD imm CD; word 2\nRSR fZ\nJMP fnX imm; word f_memClear\n\n@ memClear_clearLast\nMOV16 imm AB; 0\nRIT fnX\n\n\nbookmark Character Data\n\n@ data_characters\n# 0 - [END]\n0xFC\n0x84\n0xB4\n0xB4\n0xB4\n0xB4\n0x84\n0xFC\n0x00\n# 1 - A\n0x78\n0xFC\n0xCC\n0xCC\n0xFC\n0xFC\n0xCC\n0xCC\n0x00\n# 2 - B\n0xF8\n0xCC\n0xCC\n0xF8\n0xFC\n0xCC\n0xCC\n0xF8\n0x00\n# 3 - C\n0x78\n0xFC\n0xCC\n0xC0\n0xC0\n0xCC\n0xFC\n0x78\n0x00\n# 4 - D\n0xF8\n0xFC\n0xCC\n0xCC\n0xCC\n0xCC\n0xFC\n0xF8\n0x00\n# 5 - E\n0xFC\n0xFC\n0xC0\n0xF8\n0xF8\n0xC0\n0xFC\n0xFC\n0x00\n# 6 - F\n0xFC\n0xFC\n0xC0\n0xF0\n0xF0\n0xC0\n0xC0\n0xC0\n0x00\n# 7 - G\n0x78\n0xFC\n0xCC\n0xC0\n0xDC\n0xCC\n0xFC\n0x7C\n0x00\n# 8 - H\n0xCC\n0xCC\n0xCC\n0xFC\n0xFC\n0xCC\n0xCC\n0xCC\n0x00\n# 9 - I\n0xFC\n0xFC\n0x30\n0x30\n0x30\n0x30\n0xFC\n0xFC\n0x00\n# 10 - J\n0xFC\n0xFC\n0x30\n0x30\n0x30\n0x30\n0xF0\n0xE0\n0x00\n# 11 - K\n0xCC\n0xCC\n0xDC\n0xF8\n0xF8\n0xDC\n0xCC\n0xCC\n0x00\n# 12 - L\n0xC0\n0xC0\n0xC0\n0xC0\n0xC0\n0xC0\n0xFC\n0x7C\n0x00\n# 13 - M\n0x58\n0xFC\n0xFC\n0xAC\n0xAC\n0xAC\n0xAC\n0xAC\n0x00\n# 14 - N\n0xCC\n0xEC\n0xEC\n0xFC\n0xFC\n0xDC\n0xDC\n0xCC\n0x00\n# 15 - O\n0x78\n0xFC\n0xCC\n0xCC\n0xCC\n0xCC\n0xFC\n0x78\n0x00\n# 16 - P\n0xF8\n0xFC\n0xCC\n0xCC\n0xFC\n0xF8\n0xC0\n0xC0\n0x00\n# 17 - Q\n0x78\n0xFC\n0xCC\n0xCC\n0xCC\n0xCC\n0xFC\n0x7C\n0x0C\n# 18 - R\n0xF8\n0xFC\n0xCC\n0xCC\n0xF8\n0xF8\n0xDC\n0xCC\n0x00\n# 19 - S\n0x7C\n0xFC\n0xC0\n0xF8\n0x7C\n0x0C\n0xFC\n0xF8\n0x00\n# 20 - T\n0xFC\n0xFC\n0x30\n0x30\n0x30\n0x30\n0x30\n0x30\n0x00\n# 21 - U\n0xCC\n0xCC\n0xCC\n0xCC\n0xCC\n0xCC\n0xFC\n0x78\n0x00\n# 22 - V\n0xCC\n0xCC\n0xCC\n0xCC\n0xCC\n0xFC\n0x78\n0x30\n0x00\n# 23 - W\n0xAC\n0xAC\n0xAC\n0xAC\n0xAC\n0xAC\n0xFC\n0x58\n0x00\n# 24 - X\n0xCC\n0xCC\n0xCC\n0x78\n0x30\n0x78\n0xCC\n0xCC\n0x00\n# 25 - Y\n0xCC\n0xCC\n0xCC\n0xFC\n0x78\n0x30\n0x30\n0x30\n0x00\n# 26 - Z\n0xFC\n0xFC\n0x0C\n0x38\n0x70\n0xC0\n0xFC\n0xFC\n0x00\n# 27 - 0\n0x78\n0xFC\n0xCC\n0xDC\n0xEC\n0xCC\n0xFC\n0x78\n0x00\n# 28 - 1\n0x30\n0x70\n0x70\n0x30\n0x30\n0x30\n0x78\n0x78\n0x00\n# 29 - 2\n0xF8\n0xFC\n0x0C\n0x7C\n0xF8\n0xC0\n0xFC\n0xFC\n0x00\n# 30 - 3\n0xF8\n0xFC\n0x0C\n0x78\n0x78\n0x0C\n0xFC\n0xF8\n0x00\n# 31 - 4\n0xCC\n0xCC\n0xCC\n0xFC\n0x7C\n0x0C\n0x0C\n0x0C\n0x00\n# 32 - 5\n0xFC\n0xFC\n0xC0\n0xF8\n0x7C\n0x0C\n0xFC\n0xF8\n0x00\n# 33 - 6\n0x78\n0xFC\n0xC0\n0xF8\n0xCC\n0xCC\n0xFC\n0x78\n0x00\n# 34 - 7\n0xFC\n0xFC\n0x0C\n0x18\n0x18\n0x30\n0x30\n0x30\n0x00\n# 35 - 8\n0x78\n0xCC\n0xCC\n0x78\n0x78\n0xCC\n0xCC\n0x78\n0x00\n# 36 - 9\n0x78\n0xFC\n0xCC\n0xCC\n0xFC\n0x7C\n0x0C\n0x0C\n0x00\n# 37 - [SPACE]\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n# 38 - [ENTER]\n0x80\n0x80\n0x80\n0x90\n0x98\n0xFC\n0x18\n0x10\n0x00\n# 39 - [BACK]\n0x00\n0x00\n0x20\n0x60\n0xFC\n0x60\n0x20\n0x00\n0x00\n# 40 - .\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n0xC0\n0xC0\n0x00\n# 41 - ,\n0x00\n0x00\n0x00\n0x00\n0x00\n0xC0\n0xC0\n0x40\n0x80\n# 42 - !\n0x60\n0x60\n0x60\n0x60\n0x60\n0x00\n0x60\n0x60\n0x00\n# 43 - ?\n0x78\n0xFC\n0xCC\n0x1C\n0x38\n0x00\n0x30\n0x30\n0x00\n# 44 - :\n0x00\n0xC0\n0xC0\n0x00\n0x00\n0xC0\n0xC0\n0x00\n0x00\n# 45 - +\n0xCC\n0xCC\n0x44\n0x00\n0x00\n0x00\n0x00\n0x00\n0x00\n# 46 - -\n0x00\n0x30\n0x30\n0xFC\n0xFC\n0x30\n0x30\n0x00\n0x00\n# 47 - [UNUSED]\n0x00\n0x00\n0x00\n0xFC\n0xFC\n0x00\n0x00\n0x00\n0x00\n# 48 - [UNUSED]\n0xFC\n0xFC\n0xFC\n0xFC\n0xFC\n0xFC\n0xFC\n0xFC\n0x00\n# 49 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 50 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 51 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 52 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 53 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 54 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 55 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 56 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 57 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 58 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 59 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 60 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 61 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 62 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n# 63 - [UNUSED]\n0xFC\n0x8C\n0x94\n0x94\n0xA4\n0xA4\n0xC4\n0xFC\n0x00\n\nbookmark Testing\n\norigin 0x2000\nJSR fnX imm; word prog_primes\nRSR fnX\n\norigin 0x2010\nJSR fnX imm; word prog_fibonacci\nRSR fnX\n\norigin 0x2020\nJSR fnX imm; word prog_parrot\nRSR fnX\norigin 0x2030\nJSR fnX imm; word f_cursorPrintStr\nRSR fnX\n\norigin 0x2060\nJSR fnX imm; word prog_decimal\nRSR fnX\n",
	"is_vmem_enabled": true,
	"vmem_settings": [
		16,
		879,
		643,
		0,
		-4,
		1,
		1,
		16,
		679,
		502,
		0,
		5,
		1,
		1,
		0,
		0
	],
	"camera_position": [
		786.488159,
		588.320251
	],
	"camera_zoom": 0.083333,
	"led_palette": [
		"222534",
		"ffffff"
	],
	"docking_sizes": [
		910,
		250,
		0.961985,
		0.961985
	],
	"docking_collapseness": [
		false,
		false,
		false,
		true,
		false,
		true
	],
	"docking_sidepanels": [
		"ASSEMBLY_EDITOR",
		"BLUEPRINT_LIBRARY",
		"VIRTUAL_INPUT",
		"VMEM_EDITOR"
	],
	"assembly_is_external": false,
	"vmem_is_external": false,
	"notes": "bookmark About\n\nYou can use this space to write down notes about your project.",
	"clock_interval": 20,
	"timer_interval": 250,
	"random_seed": 1,
	"random_is_time_seed": true,
	"vdisplay_is_enabled": true,
	"vdisplay_is_visible": true,
	"vdisplay_settings": [
		596,
		647,
		128,
		128,
		1,
		1,
		65534,
		8
	],
	"vdisplay_color_depth": 1,
	"vdisplay_direction": 0,
	"vdisplay_palette": [
		"222534",
		"ffffff"
	],
	"vinput_is_enabled": true,
	"vinput_settings": [
		7,
		670,
		441,
		0,
		-2,
		1,
		1
	],
	"vinput_mode": 0,
	"vinput_bindings": "A = 0x41\nB = 0x42\nC = 0x43\nD = 0x44\nE = 0x45\nF = 0x46\nG = 0x47\nH = 0x48\nI = 0x49\nJ = 0x4A\nK = 0x4B\nL = 0x4C\nM = 0x4D\nN = 0x4E\nO = 0x4F\nP = 0x50\nQ = 0x51\nR = 0x52 \nS = 0x53\nT = 0x54\nU = 0x55\nV = 0x56\nW = 0x57\nX = 0x58\nY = 0x59\nZ = 0x5A\n0 = 0x5B\n1 = 0x5C\n2 = 0x5D \n3 = 0x5E\n4 = 0x5F\n5 = 0x60\n6 = 0x61\n7 = 0x62\n8 = 0x63\n9 = 0x64\nSpace = 0x65\nEnter = 0x66\nBackSpace = 0x67\nPeriod = 0x68\nComma = 0x69\nSlash = 0x6B\nBackSlash = 0x6A\nSemicolon = 0x6C\nApostrophe = 0x6D\nEqual = 0x6E\nMinus = 0x6F\n\nnumLock = 0b 1 111 111",
	"vmem_data": "KLUv/YBYAABAAFQAABAAAAEA+/85wAJUAAAQAP8BAPv/ORACAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAACABAAAgAQAAIAEAADABAAAgAAAAAAQAA=",
	"decoration_palette": [
		"ff6666",
		"ff8366",
		"ff9f66",
		"ffbc66",
		"ffd966",
		"fff566",
		"ecff66",
		"cfff66",
		"b3ff66",
		"96ff66",
		"79ff66",
		"66ff70",
		"66ff8c",
		"66ffa9",
		"66ffc6",
		"66ffe2",
		"66ffff",
		"66e2ff",
		"66c6ff",
		"66a9ff",
		"668cff",
		"6670ff",
		"7966ff",
		"9666ff",
		"b366ff",
		"cf66ff",
		"ec66ff",
		"ff66f5",
		"ff66d9",
		"ff66bc",
		"ff669f",
		"ff6683"
	],
	"simulation_speed_ticks": 5000000,
	"mouse_interaction_mode": 0
}